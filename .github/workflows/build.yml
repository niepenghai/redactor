name: Build Cross-Platform Executables

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write  # Required for creating releases and uploading assets
  packages: write  # Required for packages (if needed)
  actions: read    # Required for accessing workflow runs

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            artifact_name: redactor-windows
            asset_name: redactor-windows.exe
          - os: macos-latest
            artifact_name: redactor-macos
            asset_name: redactor-macos

    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'


    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pywebview pyinstaller
        
        # Verify PyMuPDF installation
        python -c "import fitz; print(f'PyMuPDF version: {fitz.version[0]}')"
        python -c "import tkinter; print('Tkinter available')"
        
        # List installed packages for debugging
        pip list | grep -E "(pymupdf|tkinter|pywebview)"

    - name: Build executable (Windows)
      if: runner.os == 'Windows'
      run: |
        echo "Building Windows executable..."
        pyinstaller --onefile --windowed --name=redactor-windows ^
        --hidden-import=fitz ^
        --hidden-import=pymupdf ^
        --hidden-import=PIL ^
        --hidden-import=PIL.Image ^
        --hidden-import=numpy ^
        --hidden-import=spacy ^
        --hidden-import=tkinter ^
        --hidden-import=tkinter.ttk ^
        --hidden-import=tkinter.filedialog ^
        --hidden-import=tkinter.messagebox ^
        --hidden-import=tkinter.scrolledtext ^
        --hidden-import=threading ^
        --hidden-import=re ^
        --hidden-import=os ^
        --hidden-import=sys ^
        --hidden-import=json ^
        --hidden-import=typing ^
        --hidden-import=pathlib ^
        --hidden-import=tempfile ^
        --hidden-import=shutil ^
        --hidden-import=random ^
        --hidden-import=hashlib ^
        --hidden-import=dataclasses ^
        --collect-all=fitz ^
        --collect-all=pymupdf ^
        --collect-all=PIL ^
        --collect-all=numpy ^
        redactor-gui.py
        
    - name: Create Windows Deployment Package
      if: runner.os == 'Windows'
      run: |
        # Create deployment folder
        mkdir windows-deployment-package
        
        # Copy executable
        copy dist\redactor-windows.exe windows-deployment-package\
        
        # Copy deployment files
        copy windows-deployment\README_Windows.md windows-deployment-package\
        copy windows-deployment\启动程序.bat windows-deployment-package\
        copy windows-deployment\部署说明.txt windows-deployment-package\
        
        # Create output folder
        mkdir windows-deployment-package\输出文件
        
        # Create zip package
        powershell Compress-Archive -Path windows-deployment-package\* -DestinationPath dist\PDF-Redactor-Windows-Offline.zip
      
    - name: Build executable (macOS)
      if: runner.os == 'macOS'
      run: |
        echo "Building macOS executable..."
        pyinstaller --onefile --name=redactor-macos \
        --hidden-import=fitz \
        --hidden-import=pymupdf \
        --hidden-import=PIL \
        --hidden-import=PIL.Image \
        --hidden-import=numpy \
        --hidden-import=spacy \
        --hidden-import=tkinter \
        --hidden-import=tkinter.ttk \
        --hidden-import=tkinter.filedialog \
        --hidden-import=tkinter.messagebox \
        --hidden-import=tkinter.scrolledtext \
        --hidden-import=threading \
        --hidden-import=re \
        --hidden-import=os \
        --hidden-import=sys \
        --hidden-import=json \
        --hidden-import=typing \
        --hidden-import=pathlib \
        --hidden-import=tempfile \
        --hidden-import=shutil \
        --hidden-import=random \
        --hidden-import=hashlib \
        --hidden-import=dataclasses \
        --collect-all=fitz \
        --collect-all=pymupdf \
        --collect-all=PIL \
        --collect-all=numpy \
        redactor-gui.py


    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: |
          dist/redactor-windows.exe
          dist/redactor-macos


    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: dist/${{ matrix.asset_name }}
        body: |
          ## Financial Document Redactor ${{ github.ref_name }}
          
          **Ready-to-use executables - no installation required!**
          
          ### Download Options:
          - 🪟 **Windows**: 
            - `redactor-windows.exe` - Single executable file
            - `PDF-Redactor-Windows-Offline.zip` - Complete offline package with documentation
          - 🍎 **macOS**: `redactor-macos` - Right-click → Open (first time only)
          
          ### 🪟 Windows Offline Users:
          Download `PDF-Redactor-Windows-Offline.zip` for complete offline deployment:
          - ✅ Main executable + startup script
          - ✅ Chinese documentation and user guide  
          - ✅ No internet required
          - ✅ Perfect for corporate/restricted environments
          
          ### 🍎 macOS Security Notice:
          Since this app is not signed with an Apple Developer certificate, macOS will show a security warning. To open safely:
          1. Right-click on `redactor-macos` 
          2. Select "Open" from context menu
          3. Click "Open" in the dialog
          4. Or use Terminal: `xattr -d com.apple.quarantine ./redactor-macos`
          
          ### Features:
          - ✅ PDF redaction with multiple modes (generic/realistic/custom)
          - ✅ Support for bank statements, W2s, tax returns, pay stubs
          - ✅ Redacts SSN, account numbers, names, addresses
          - ✅ Professional GUI interface
          - ✅ Real-time processing with detailed reporting
          
          ### Usage:
          1. Download the appropriate executable for your OS
          2. Double-click to run (no installation needed)
          3. Select PDF files and output folder
          4. Choose redaction mode and process!
          
          **Note**: This release contains only executables, no source code.
        
    - name: Upload Windows Deployment Package
      if: startsWith(github.ref, 'refs/tags/v') && runner.os == 'Windows'
      uses: softprops/action-gh-release@v1
      with:
        files: dist/PDF-Redactor-Windows-Offline.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Remove Source Code from Release
      if: startsWith(github.ref, 'refs/tags/v') && matrix.os == 'windows-latest'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          // Get release by tag
          const { data: release } = await github.rest.repos.getReleaseByTag({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag: context.ref.replace('refs/tags/', '')
          });
          
          // Find source code assets
          const sourceAssets = release.assets.filter(asset => 
            asset.name.includes('Source code')
          );
          
          // Delete source code assets
          for (const asset of sourceAssets) {
            console.log(`Deleting: ${asset.name}`);
            await github.rest.repos.deleteReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              asset_id: asset.id
            });
          }
          
          console.log(`Removed ${sourceAssets.length} source code assets`);